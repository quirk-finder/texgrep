services:
  backend:
    build:
      context: ..
      dockerfile: backend/Dockerfile
    env_file:
      - ../.env
    environment:
      - PYTHONPATH=/app/backend:/app
      - DJANGO_SETTINGS_MODULE=texgrep.settings
      - OPENSEARCH_URL=http://opensearch:9200
      - ZOEKT_URL=http://zoekt:6070
    volumes:
      - ../backend:/app/backend
      - ../indexer:/app/indexer
      - ../scripts:/app/scripts
      - backend_static:/app/staticfiles
    command: ["uvicorn", "texgrep.asgi:application", "--host", "0.0.0.0", "--port", "8000"]
    # ports: # Bind for 0.0.0.0:8000 failed: port is already allocatedの対策で
    #   - "8000:8000"
    depends_on:
      opensearch:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped

  worker:
    build:
      context: ..
      dockerfile: backend/Dockerfile
    env_file:
      - ../.env
    environment:
      - PYTHONPATH=/app/backend:/app
      - DJANGO_SETTINGS_MODULE=texgrep.settings
      - OPENSEARCH_URL=http://opensearch:9200
      - ZOEKT_URL=http://zoekt:6070
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - ../backend:/app/backend
      - ../indexer:/app/indexer
      - ../scripts:/app/scripts
    # celery app 名はプロジェクトに合わせて。celery.py があるならこれでOK
    command: ["celery", "-A", "texgrep", "worker", "-l", "info"]
    depends_on:
      opensearch:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped

  frontend:
    build:
      context: ..
      dockerfile: frontend/Dockerfile
    env_file:
      - ../.env
    environment:
      # chokidar を確実にポーリングさせる
      CHOKIDAR_USEPOLLING: "true"
      CHOKIDAR_INTERVAL: "200"
    volumes:
      - ../frontend:/app/frontend
      - /app/frontend/node_modules
    command: ["npm", "run", "dev", "--", "--host", "0.0.0.0", "--port", "5173"]
    ports:
      - "5173:5173"
    depends_on:
      backend:
        condition: service_started
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    # ports: # ホスト側 9200 衝突（Bind for 0.0.0.0:9200 failed）を避けるため
    #   - "6379:6379"
    restart: unless-stopped

  opensearch:
    image: opensearchproject/opensearch:2.9.0
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m
      - plugins.security.disabled=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:9200/_cluster/health || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 40
    # ports: # ホスト側 9200 衝突（Bind for 0.0.0.0:9200 failed）を避けるため
    #   - "9200:9200"
    volumes:
      - opensearch_data:/usr/share/opensearch/data   # ★ 追加
    restart: unless-stopped

  zoekt:
    image: ghcr.io/sourcegraph/zoekt-webserver:latest
    expose:
      - "6070"
    volumes:
      - zoekt_data:/data
    restart: unless-stopped

volumes:
  backend_static:
  opensearch_data:
  zoekt_data:
